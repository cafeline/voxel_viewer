# HDF5 Demo Configuration

# PointCloud Compressor Node Parameters
pointcloud_compressor_node:
  ros__parameters:
    # Input/Output settings
    input_file: "/home/ryo/tsudanuma/maps/tsudanuma-challenge-all.ply"
    voxel_size: 0.1
    block_size: 13
    min_points_threshold: 2

    # Publishing / saving
    publish_once: true
    publish_occupied_voxel_markers: true
    save_hdf5: true
    hdf5_output_file: "/tmp/compressed_map.h5"
    # Save raw occupancy voxel grid
    save_raw_hdf5: true
    raw_hdf5_output_file: "/tmp/tsudanuma_voxelsize_01_raw_map.h5"

# Voxel Viewer With HDF5 Parameters
voxel_viewer_with_hdf5:
  ros__parameters:
    # Rendering backend:
    #   - 'cubes'               : 従来の立方体メッシュ
    #   - 'instanced'           : 色付きインスタンス（現状はPointCloudフォールバック）
    #   - 'instanced_gpu_python': Open3D rendering API（妥協実装: 現状はPointCloudフォールバック）
    render_mode: "instanced_gpu_python"
    mode: "file_comparison"   # or "topic_comparison"
    hdf5_file: "/tmp/tsudanuma_voxelsize_01_compressed_map.h5"
    raw_hdf5_file: "/tmp/tsudanuma_voxelsize_01_raw_map.h5"
    # hdf5_file: "/tmp/compressed_map.h5"
    # raw_hdf5_file: "/tmp/raw_voxel_grid.h5"


# Launch-time options
launch:
  start_pointcloud_compressor: false
